{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\.cursor-tutor\\\\my-portfolio\\\\src\\\\components\\\\Skills.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './Skills.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst skillsData = [{\n  name: 'Electronic Health Record',\n  image: '/images/tools/epic.png'\n}, {\n  name: 'SQL',\n  image: '/images/tools/mysql.png'\n}, {\n  name: 'Python',\n  image: '/images/tools/python.jpg'\n}, {\n  name: 'Looker',\n  image: '/images/tools/looker.png'\n}, {\n  name: 'Tableau',\n  image: '/images/tools/tableau.png'\n}, {\n  name: 'Power BI',\n  image: '/images/tools/power-bi.png'\n}, {\n  name: 'HL7',\n  image: '/images/tools/hl7.jpg'\n}, {\n  name: 'FHIR',\n  image: '/images/tools/FHIR.png'\n}, {\n  name: 'HIPAA',\n  image: '/images/tools/HIPAA.jpg'\n}, {\n  name: 'Medical Device standards',\n  image: '/images/tools/ISO.png'\n}, {\n  name: 'TypeScript',\n  image: '/images/tools/typescript.png'\n}, {\n  name: 'TypeScript',\n  image: '/images/tools/typescript.png'\n}, {\n  name: 'TypeScript',\n  image: '/images/tools/typescript.png'\n}, {\n  name: 'TypeScript',\n  image: '/images/tools/typescript.png'\n}, {\n  name: 'TypeScript',\n  image: '/images/tools/typescript.png'\n}, {\n  name: 'TypeScript',\n  image: '/images/tools/typescript.png'\n}, {\n  name: 'TypeScript',\n  image: '/images/tools/typescript.png'\n}, {\n  name: 'TypeScript',\n  image: '/images/tools/typescript.png'\n}, {\n  name: 'TypeScript',\n  image: '/images/tools/typescript.png'\n}, {\n  name: 'TypeScript',\n  image: '/images/tools/typescript.png'\n}, {\n  name: 'TypeScript',\n  image: '/images/tools/typescript.png'\n}, {\n  name: 'TypeScript',\n  image: '/images/tools/typescript.png'\n}, {\n  name: 'TypeScript',\n  image: '/images/tools/typescript.png'\n}, {\n  name: 'TypeScript',\n  image: '/images/tools/typescript.png'\n}, {\n  name: 'TypeScript',\n  image: '/images/tools/typescript.png'\n}\n// Add more tools as needed\n];\nfunction Skills() {\n  _s();\n  const skillsRef = useRef(null);\n  useEffect(() => {\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting) {\n        skillsRef.current.classList.add('animate');\n      }\n    }, {\n      threshold: 0.1\n    });\n    if (skillsRef.current) {\n      observer.observe(skillsRef.current);\n    }\n    return () => {\n      if (skillsRef.current) {\n        observer.unobserve(skillsRef.current);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"skills-container\",\n    ref: skillsRef,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"skills-grid\",\n      children: skillsData.map((skill, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"skill-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: skill.image,\n          alt: skill.name,\n          className: \"skill-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"skill-name\",\n          children: skill.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Skills, \"6glQnFpF0pBj/+YeWbB8whitf0U=\");\n_c = Skills;\nexport default Skills;\nvar _c;\n$RefreshReg$(_c, \"Skills\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","skillsData","name","image","Skills","_s","skillsRef","observer","IntersectionObserver","entry","isIntersecting","current","classList","add","threshold","observe","unobserve","className","ref","children","map","skill","index","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hp/.cursor-tutor/my-portfolio/src/components/Skills.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport './Skills.css';\r\n\r\nconst skillsData = [\r\n  { name: 'Electronic Health Record', image: '/images/tools/epic.png' },\r\n  { name: 'SQL', image: '/images/tools/mysql.png' },\r\n  { name: 'Python', image: '/images/tools/python.jpg' },\r\n  { name: 'Looker', image: '/images/tools/looker.png' },\r\n  { name: 'Tableau', image: '/images/tools/tableau.png' },\r\n  { name: 'Power BI', image: '/images/tools/power-bi.png' },\r\n  { name: 'HL7', image: '/images/tools/hl7.jpg' },\r\n  { name: 'FHIR', image: '/images/tools/FHIR.png' },\r\n  { name: 'HIPAA', image: '/images/tools/HIPAA.jpg' },\r\n  { name: 'Medical Device standards', image: '/images/tools/ISO.png' },\r\n  { name: 'TypeScript', image: '/images/tools/typescript.png' },\r\n  { name: 'TypeScript', image: '/images/tools/typescript.png' },\r\n  { name: 'TypeScript', image: '/images/tools/typescript.png' },\r\n  { name: 'TypeScript', image: '/images/tools/typescript.png' },\r\n  { name: 'TypeScript', image: '/images/tools/typescript.png' },\r\n  { name: 'TypeScript', image: '/images/tools/typescript.png' },\r\n  { name: 'TypeScript', image: '/images/tools/typescript.png' },\r\n  { name: 'TypeScript', image: '/images/tools/typescript.png' },\r\n  { name: 'TypeScript', image: '/images/tools/typescript.png' },\r\n  { name: 'TypeScript', image: '/images/tools/typescript.png' },\r\n  { name: 'TypeScript', image: '/images/tools/typescript.png' },\r\n  { name: 'TypeScript', image: '/images/tools/typescript.png' },\r\n  { name: 'TypeScript', image: '/images/tools/typescript.png' },\r\n  { name: 'TypeScript', image: '/images/tools/typescript.png' },\r\n  { name: 'TypeScript', image: '/images/tools/typescript.png' }\r\n  // Add more tools as needed\r\n];\r\n\r\nfunction Skills() {\r\n  const skillsRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (entry.isIntersecting) {\r\n          skillsRef.current.classList.add('animate');\r\n        }\r\n      },\r\n      { threshold: 0.1 }\r\n    );\r\n\r\n    if (skillsRef.current) {\r\n      observer.observe(skillsRef.current);\r\n    }\r\n\r\n    return () => {\r\n      if (skillsRef.current) {\r\n        observer.unobserve(skillsRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"skills-container\" ref={skillsRef}>\r\n      {/* <h2>Skills & Tools</h2> */}\r\n      <div className=\"skills-grid\">\r\n        {skillsData.map((skill, index) => (\r\n          <div key={index} className=\"skill-item\">\r\n            <img src={skill.image} alt={skill.name} className=\"skill-image\" />\r\n            <div className=\"skill-name\">{skill.name}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Skills;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}